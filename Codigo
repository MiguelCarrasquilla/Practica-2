import Data.Char

-- Función para validar un ISBN
validarISBN :: String -> Bool
validarISBN isbn = calcularResiduo (sumMultiplicaciones isbn) == 0

-- Función para calcular el residuo
calcularResiduo :: Int -> Int
calcularResiduo suma = suma `mod` 11

-- Función para sumar las multiplicaciones
sumMultiplicaciones :: String -> Int
sumMultiplicaciones isbn = sum $ zipWith (*) (map valorDigito isbn) [10,9,8,7,6,5,4,3,2,1]

-- Función para obtener el valor numérico de un dígito (considerando 'X')
valorDigito :: Char -> Int
valorDigito 'X' = 10
valorDigito c = digitToInt c

-- Función principal para la entrada del usuario
main :: IO ()
main = do
    putStrLn "Ingrese el ISBN (con guiones):"
    isbn <- getLine
    let resultado = validarISBN isbn
    putStrLn $ "El ISBN ingresado es válido: " ++ show resultado
